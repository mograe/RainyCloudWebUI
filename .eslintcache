[{"G:\\git-repositories\\RainyCloudWebUI\\src\\index.js":"1","G:\\git-repositories\\RainyCloudWebUI\\src\\App.js":"2","G:\\git-repositories\\RainyCloudWebUI\\src\\reportWebVitals.js":"3","G:\\git-repositories\\RainyCloudWebUI\\src\\data.js":"4","G:\\git-repositories\\RainyCloudWebUI\\src\\components\\Player.js":"5","G:\\git-repositories\\RainyCloudWebUI\\src\\components\\Credit.js":"6","G:\\git-repositories\\RainyCloudWebUI\\src\\components\\Library.js":"7","G:\\git-repositories\\RainyCloudWebUI\\src\\components\\Nav.js":"8","G:\\git-repositories\\RainyCloudWebUI\\src\\components\\Video.js":"9","G:\\git-repositories\\RainyCloudWebUI\\src\\components\\LibraryVideo.js":"10","G:\\git-repositories\\RainyCloudWebUI\\src\\VideoClient.js":"11"},{"size":489,"mtime":1689665099608,"results":"12","hashOfConfig":"13"},{"size":2827,"mtime":1722450171666,"results":"14","hashOfConfig":"13"},{"size":356,"mtime":1689665099609,"results":"15","hashOfConfig":"13"},{"size":509,"mtime":1724712718329,"results":"16","hashOfConfig":"13"},{"size":5126,"mtime":1690148847773,"results":"17","hashOfConfig":"13"},{"size":734,"mtime":1689665099604,"results":"18","hashOfConfig":"13"},{"size":1615,"mtime":1690149264125,"results":"19","hashOfConfig":"13"},{"size":1273,"mtime":1689665099606,"results":"20","hashOfConfig":"13"},{"size":760,"mtime":1690147699377,"results":"21","hashOfConfig":"13"},{"size":1678,"mtime":1690150110699,"results":"22","hashOfConfig":"13"},{"size":962,"mtime":1722447158087,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"dz76ic",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"G:\\git-repositories\\RainyCloudWebUI\\src\\index.js",[],["49","50"],"G:\\git-repositories\\RainyCloudWebUI\\src\\App.js",["51","52"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"./App.css\";\r\n\r\n// Import components\r\nimport Player from \"./components/Player\";\r\nimport Video from \"./components/Video\";\r\nimport Library from \"./components/Library\";\r\nimport Nav from \"./components/Nav\";\r\nimport Credit from \"./components/Credit\";\r\n// Import data\r\nimport data from \"./data\";\r\n\r\nimport VideoClient from \"./VideoClient\";\r\n\r\nconst videoClient = new VideoClient(\"http://localhost:3001/\");\r\n\r\nconst App = () => {\r\n\t// Ref\r\n\tconst audioRef = useRef(null);\r\n\r\n\t// State\r\n\tconst [videos, setVideos] = useState(data());\r\n\tconst [currentVideo, setCurrentVideo] = useState(videos[0]);\r\n\tconst [isPlaying, setIsPlaying] = useState(false);\r\n\tconst [libraryStatus, setLibraryStatus] = useState(false);\r\n\tconst [videoInfo, setVideoInfo] = useState({\r\n\t\tcurrentTime: 0,\r\n\t\tduration: 0,\r\n\t});\r\n\r\n\t//Effects\r\n\tuseEffect(() => {videoClient.setSrc(currentVideo); setIsPlaying(true)}, [currentVideo])\r\n\tuseEffect(() => {\r\n\t\tvideoClient.socket.on('user-is-connected', () => {\r\n\t\t\tvideoClient.setSrc(videoClient._src, false); setIsPlaying(true);\r\n\t\t})}, [videoClient.socket]);\r\n\t/*useEffect(() => {\r\n\t\tconst interval = setInterval(() => \r\n\t\t{console.log(videoClient._videoInfo)\r\n\t\t}, 100);\r\n\t\treturn () => clearInterval(interval);\r\n\t}, [])*/\r\n\r\n\t// Functions\r\n\r\n\tconst videoEndHandler = async () => {\r\n\t\tlet currentIndex = videos.findIndex((video) => video.id === currentVideo.id);\r\n\t\tlet nextVideo = videos[(currentIndex + 1) % videos.length];\r\n\t\tawait setCurrentVideo(nextVideo);\r\n\r\n\t\tconst newVideos = videos.map((video) => {\r\n\t\t\tif (video.id === nextVideo.id) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...video,\r\n\t\t\t\t\tactive: true,\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...video,\r\n\t\t\t\t\tactive: false,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t});\r\n\t\tsetVideos(newVideos);\r\n\r\n\t\tif (isPlaying) {\r\n\t\t\taudioRef.current.play();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<AppContainer libraryStatus={libraryStatus}>\r\n\t\t\t<Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\r\n\t\t\t<Video currentVideo={currentVideo} />\r\n\t\t\t<Player\r\n\t\t\t\tisPlaying={isPlaying}\r\n\t\t\t\tsetIsPlaying={setIsPlaying}\r\n\t\t\t\tcurrentVideo={currentVideo}\r\n\t\t\t\tsetCurrentVideo={setCurrentVideo}\r\n\t\t\t\tvideoClient={videoClient}\r\n\t\t\t\tvideoInfo={videoInfo}\r\n\t\t\t\tsetVideoInfo={setVideoInfo}\r\n\t\t\t\tvideos={videos}\r\n\t\t\t\tsetVideos={setVideos}\r\n\t\t\t/>\r\n\t\t\t<Library\r\n\t\t\t\tvideos={videos}\r\n\t\t\t\tsetCurrentVideo={setCurrentVideo}\r\n\t\t\t\tvideoClient={videoClient}\r\n\t\t\t\tisPlaying={isPlaying}\r\n\t\t\t\tsetVideos={setVideos}\r\n\t\t\t\tlibraryStatus={libraryStatus}\r\n\t\t\t/>\r\n\t\t\t<Credit />\r\n\t\t</AppContainer>\r\n\t);\r\n};\r\n\r\nconst AppContainer = styled.div`\r\n\ttransition: all 0.5s ease;\r\n\tmargin-left: ${(p) => (p.libraryStatus ? \"20rem\" : \"0\")};\r\n\t@media screen and (max-width: 768px) {\r\n\t\tmargin-left: 0;\r\n\t}\r\n`;\r\n\r\nexport default App;\r\n","G:\\git-repositories\\RainyCloudWebUI\\src\\reportWebVitals.js",[],"G:\\git-repositories\\RainyCloudWebUI\\src\\data.js",[],"G:\\git-repositories\\RainyCloudWebUI\\src\\components\\Player.js",["53"],"import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleLeft, faAngleRight, faPlay, faPause } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled from \"styled-components\";\r\n\r\n// style\r\nconst pointer = { cursor: \"pointer\" };\r\n\r\nconst Player = ({\r\n\tcurrentVideo,\r\n\tsetCurrentVideo,\r\n\tisPlaying,\r\n\tsetIsPlaying,\r\n\tvideoClient,\r\n\tvideoInfo,\r\n\tsetVideoInfo,\r\n\tvideos,\r\n\tsetVideos,\r\n}) => {\r\n\t// Event handlers\r\n\tconst playSongHandler = () => {\r\n\t\tif (isPlaying) {\r\n\t\t\tvideoClient.pause();\r\n\t\t\tsetIsPlaying(!isPlaying);\r\n\t\t} else {\r\n\t\t\tvideoClient.play();\r\n\t\t\tsetIsPlaying(!isPlaying);\r\n\t\t}\r\n\t};\r\n\r\n\tconst togglePlayPauseIcon = () => {\r\n\t\tif (isPlaying) {\r\n\t\t\treturn faPause;\r\n\t\t} else {\r\n\t\t\treturn faPlay;\r\n\t\t}\r\n\t};\r\n\r\n\tconst getTime = (time) => {\r\n\t\tlet minute = Math.floor(time / 60);\r\n\t\tlet second = (\"0\" + Math.floor(time % 60)).slice(-2);\r\n\t\treturn `${minute}:${second}`;\r\n\t};\r\n\r\n\t//TODO: Перематывать видео? Хуй знает надо ли оно но навсякий случай\r\n\t/*const dragHandler = (e) => {\r\n\t\taudioRef.current.currentTime = e.target.value;\r\n\t\tsetSongInfo({ ...videoInfo, currentTime: e.target.value });\r\n\t};*/\r\n\r\n\tconst skipTrackHandler = async (direction) => {\r\n\t\tlet currentIndex = videos.findIndex((video) => video.id === currentVideo.id);\r\n\t\tif (direction === \"skip-forward\") {\r\n\t\t\tawait setCurrentVideo(videos[(currentIndex + 1) % videos.length]);\r\n\t\t\tactiveLibraryHandler(videos[(currentIndex + 1) % videos.length]);\r\n\t\t} else if (direction === \"skip-back\") {\r\n\t\t\tif ((currentIndex - 1) % videos.length === -1) {\r\n\t\t\t\tawait setCurrentVideo(videos[videos.length - 1]);\r\n\t\t\t\tactiveLibraryHandler(videos[videos.length - 1]);\r\n\t\t\t} else {\r\n\t\t\t\tawait setCurrentVideo(videos[(currentIndex - 1) % videos.length]);\r\n\t\t\t\tactiveLibraryHandler(videos[(currentIndex - 1) % videos.length]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (isPlaying) {\r\n\t\t\tvideoClient.play();\r\n\t\t}\r\n\t};\r\n\r\n\tconst activeLibraryHandler = (newVideo) => {\r\n\t\tconst newVideos = videos.map((video) => {\r\n\t\t\tif (video.id === newVideo.id) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...video,\r\n\t\t\t\t\tactive: true,\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...video,\r\n\t\t\t\t\tactive: false,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t});\r\n\t\tsetVideos(newVideos);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<PlayerContainer>\r\n\t\t\t<TimeControlContainer>\r\n\t\t\t\t<P>{getTime(videoInfo.currentTime || 0)}</P>\r\n\t\t\t\t<Track currentVideo={currentVideo}>\r\n\t\t\t\t\t<AnimateTrack videoInfo={videoInfo}></AnimateTrack>\r\n\t\t\t\t</Track>\r\n\r\n\t\t\t\t<P>{getTime(videoInfo.duration || 0)}</P>\r\n\t\t\t</TimeControlContainer>\r\n\r\n\t\t\t<PlayControlContainer>\r\n\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\tonClick={() => skipTrackHandler(\"skip-back\")}\r\n\t\t\t\t\tclassName=\"skip-back\"\r\n\t\t\t\t\ticon={faAngleLeft}\r\n\t\t\t\t\tsize=\"2x\"\r\n\t\t\t\t\tstyle={pointer}\r\n\t\t\t\t/>\r\n\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\tonClick={playSongHandler}\r\n\t\t\t\t\tclassName=\"play\"\r\n\t\t\t\t\ticon={togglePlayPauseIcon()}\r\n\t\t\t\t\tsize=\"2x\"\r\n\t\t\t\t\tstyle={pointer}\r\n\t\t\t\t/>\r\n\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\tonClick={() => skipTrackHandler(\"skip-forward\")}\r\n\t\t\t\t\tclassName=\"skip-forward\"\r\n\t\t\t\t\ticon={faAngleRight}\r\n\t\t\t\t\tsize=\"2x\"\r\n\t\t\t\t\tstyle={pointer}\r\n\t\t\t\t/>\r\n\t\t\t</PlayControlContainer>\r\n\t\t</PlayerContainer>\r\n\t);\r\n};\r\n\r\nconst PlayerContainer = styled.div`\r\n\tmin-height: 20vh;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n`;\r\n\r\nconst TimeControlContainer = styled.div`\r\n\tmargin-top: 5vh;\r\n\twidth: 50%;\r\n\tdisplay: flex;\r\n\t@media screen and (max-width: 768px) {\r\n\t\twidth: 90%;\r\n\t}\r\n`;\r\n\r\nconst Track = styled.div`\r\n\tbackground: lightblue;\r\n\twidth: 100%;\r\n\theight: 1rem;\r\n\tposition: relative;\r\n\tborder-radius: 1rem;\r\n\toverflow: hidden;\r\n\tbackground: linear-gradient(to right, ${(p) => p.currentVideo.color[0]}, ${(p) => p.currentVideo.color[1]});\r\n`;\r\n\r\nconst AnimateTrack = styled.div`\r\n\tbackground: rgb(204, 204, 204);\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\ttransform: translateX(${(p) => Math.round((p.videoInfo.currentTime * 100) / p.videoInfo.duration) + \"%\"});\r\n\tpointer-events: none;\r\n`;\r\n\r\nconst Input = styled.input`\r\n\twidth: 100%;\r\n\t-webkit-appearance: none;\r\n\tbackground: transparent;\r\n\tcursor: pointer;\r\n\t/* padding-top: 1rem;\r\n\tpadding-bottom: 1rem; */\r\n\t&:focus {\r\n\t\toutline: none;\r\n\t\t-webkit-appearance: none;\r\n\t}\r\n\t@media screen and (max-width: 768px) {\r\n\t\t&::-webkit-slider-thumb {\r\n\t\t\theight: 48px;\r\n\t\t\twidth: 48px;\r\n\t\t}\r\n\t}\r\n\t&::-webkit-slider-thumb {\r\n\t\t-webkit-appearance: none;\r\n\t\theight: 16px;\r\n\t\twidth: 16px;\r\n\t\tbackground: transparent;\r\n\t\tborder: none;\r\n\t}\r\n\t&::-moz-range-thumb {\r\n\t\t-webkit-appearance: none;\r\n\t\tbackground: transparent;\r\n\t\tborder: none;\r\n\t}\r\n\t&::-ms-thumb {\r\n\t\t-webkit-appearance: none;\r\n\t\tbackground: transparent;\r\n\t\tborder: none;\r\n\t}\r\n\t&::-moz-range-thumb {\r\n\t\t-webkit-appearance: none;\r\n\t\tbackground: transparent;\r\n\t\tborder: none;\r\n\t}\r\n`;\r\n\r\nconst P = styled.p`\r\n\tpadding: 0 1rem 0 1rem;\r\n\tuser-select: none;\r\n`;\r\n\r\nconst PlayControlContainer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tpadding: 1rem;\r\n\twidth: 30%;\r\n\t@media screen and (max-width: 768px) {\r\n\t\twidth: 60%;\r\n\t}\r\n`;\r\n\r\nexport default Player;\r\n","G:\\git-repositories\\RainyCloudWebUI\\src\\components\\Credit.js",[],"G:\\git-repositories\\RainyCloudWebUI\\src\\components\\Library.js",[],"G:\\git-repositories\\RainyCloudWebUI\\src\\components\\Nav.js",[],"G:\\git-repositories\\RainyCloudWebUI\\src\\components\\Video.js",[],"G:\\git-repositories\\RainyCloudWebUI\\src\\components\\LibraryVideo.js",[],"G:\\git-repositories\\RainyCloudWebUI\\src\\VideoClient.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":37,"column":8,"nodeType":"60","endLine":37,"endColumn":28,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":47,"column":8,"nodeType":"64","messageId":"65","endLine":47,"endColumn":23},{"ruleId":"62","severity":1,"message":"66","line":163,"column":7,"nodeType":"64","messageId":"65","endLine":163,"endColumn":12},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'videoClient.socket'. Either exclude it or remove the dependency array. Outer scope values like 'videoClient.socket' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["69"],"no-unused-vars","'videoEndHandler' is assigned a value but never used.","Identifier","unusedVar","'Input' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: []",{"range":"72","text":"73"},[1155,1175],"[]"]